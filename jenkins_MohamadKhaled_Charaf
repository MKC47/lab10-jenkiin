pipeline {
    agent any
    environment {
        VIRTUAL_ENV = 'venv'
        PYTHON = "C:\\Users\\khale\\AppData\\Local\\Programs\\Python\\Python313\\python.exe"
        PYTHONIOENCODING = 'utf-8' // Ensures Python uses UTF-8 for I/O operations
    }
    stages {
        stage('Setup') {
            steps {
                script {
                    // Create virtual environment if it doesn't exist
                    if (!fileExists("${env.WORKSPACE}\\${VIRTUAL_ENV}")) {
                        bat "${env.PYTHON} -m venv ${VIRTUAL_ENV}"
                    }
                    // Activate virtual environment and install dependencies
                    bat "call .\\${VIRTUAL_ENV}\\Scripts\\activate && pip install -r requirements.txt"
                }
            }
        }
        stage('Lint') {
            steps {
                script {
                    // Activate virtual environment and run flake8
                    bat "call .\\${VIRTUAL_ENV}\\Scripts\\activate && flake8 app.py"
                }
            }
        }
        stage('Test') {
            steps {
                script {
                    // Activate virtual environment and run pytest
                    bat "call .\\${VIRTUAL_ENV}\\Scripts\\activate && pytest"
                }
            }
        }
        stage('Coverage') {
            steps {
                script {
                    // Activate virtual environment and run coverage
                    bat "call .\\${VIRTUAL_ENV}\\Scripts\\activate && coverage run -m pytest && coverage report && coverage html"
                }
            }
        }
        stage('Security Scan') {
            steps {
                script {
                    // Option 1: Change console code page to UTF-8 before running Bandit
                    bat """
                        chcp 65001
                        call .\\${VIRTUAL_ENV}\\Scripts\\activate && bandit -r .
                    """
                    
                    // Option 2: Alternatively, set PYTHONIOENCODING within the batch command
                    // bat "set PYTHONIOENCODING=utf-8 && call .\\${VIRTUAL_ENV}\\Scripts\\activate && bandit -r ."
                }
            }
        }
        stage('Deploy') {
            steps {
                script {
                    echo "Deploying application..."
                    // Activate virtual environment and run deploy.py
                    bat "call .\\${VIRTUAL_ENV}\\Scripts\\activate && python deploy.py"
                }
            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}
